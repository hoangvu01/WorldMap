{"ast":null,"code":"import _slicedToArray from \"/home/tbptbp/Desktop/Workspace/Fun_Coding/WorldMap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { identity } from \"./continuous.js\";\nimport { initInterpolator } from \"./init.js\";\nimport { linearish } from \"./linear.js\";\nimport { loggish } from \"./log.js\";\nimport { symlogish } from \"./symlog.js\";\nimport { powish } from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function (_) {\n    var _ref, _ref2;\n\n    return arguments.length ? ((_ref = _, _ref2 = _slicedToArray(_ref, 2), x0 = _ref2[0], x1 = _ref2[1], _ref), t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function () {\n    return [interpolator(0), interpolator(1)];\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());\n}\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function () {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function () {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Fun_Coding/WorldMap/node_modules/d3-scale/src/sequential.js"],"names":["identity","initInterpolator","linearish","loggish","symlogish","powish","transformer","x0","x1","t0","t1","k10","transform","interpolator","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","arguments","length","range","t","copy","source","target","sequential","apply","sequentialLog","base","sequentialSymlog","constant","sequentialPow","exponent","sequentialSqrt"],"mappings":"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","sourcesContent":["import {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return [interpolator(0), interpolator(1)];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n"]},"metadata":{},"sourceType":"module"}